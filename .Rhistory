demo()
a
a <- available.packages()
head(rownames(a), 3)
head(rownames(a), 23)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
cls
clear
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
x <- 1
print(x)
x
msg <- "hello"
msg
x <-
x
y <- c("a", TRUE)
y
x <- 6
class(x)
x <- -1
x
as.logical(x)
x <- -1.1
x
as.logical(x)
as.complex(x)
x <- list(1, "a", 2, "b", 3, "c")
x
m <- matrix(1:6, nrow = 2, ncol = 3)
m
class(m)
m <- 1:6
m
class(m)
dim(m) <- c(2,3)
m
class(m)
x <- 4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
y <- x[[1]]
class(y)
x <- 1:4
y <- 2
x+y
x <- c(17,14,4,5,13,12,10)
x[x>10] <- 4
x
pwd
data <- read.table("hw1_data.csv")
data <- read.csv("hw1_data.csv")
data
class(data)
ozone <- data["Ozone"]
ozone
ozoneNA <- ozone[ozone != NA]
ozoneNA
ozoneNA <- ozone[ozone == NA]
ozoneNA
sum (!is.na(ozone))
ozone
sum (!is.nan(ozone))
sum (is.na(ozone))
ozoneNA <- is.na(ozone)
ozoneCleaned <- ozone[!ozoneNA]
ozoneCleaned
mean(ozoneCleaned)
q18subsetOzone <- data[data["Ozone"] > 31]
q18subsetOzone
q18subsetOzone <- data[which(data$ozone > 31),]
q18subsetOzone
data
q18subsetOzone <- data[which(data$Ozone > 31),]
q18subsetOzone
q18subsetOzoneAndTemp <- q18subsetOzone[which(q18subsetOzone$Temp > 90),]
q18subsetOzoneAndTemp
q18solarR <- q18subsetOzoneAndTemp["Solar.R"]
q18solarR
mean(q18solarR)
class(solarR)
class(q18solarR)
mean(q18solarR[1])
class(q18solarR[1])
cleanSolarR <- q18solarR[1]
class(cleanSolarR)
cleanSolarR <- as.list(q18solarR)
cleanSolarR
mean(cleanSolarR)
class(cleanSolarR)
cleanSolarR <- as.numeric(q18solarR)
cleanSolarR <- as.vector(q18solarR)
class(cleanSolarR)
lapply(q18solarR, FUN=colMeans)
mean(q18solarR[[1]])
q19mth6 <- data[which(data$Month=6)]
q19mth6 <- data[which(data$Month==6)]
q19mth6 <- data[which(data$Month==6),]
q19mth6
mean(q19mth6[["Temp"]])
q20 <- data[which(data$Month==5),]
q20
# My First R Function
library(datasets)
data(iris)
?iris
iris
virginica <- split(iris, iris$Species)
virginica
colmeans(iris)
colMeans(virginica)
virginica
class(virginica)
lapply (virginica, mean)
VSL = virginica$Sepal.Length
VSL
colMeans(iris)
apply(iris[, 1:4], 2, mean)
apply(virginica[, 1:4], 2, mean)
class(iris)
virginica
remove virginica
rm(virginica)
rm(VSL)
apply(iris, 2, mean)
colMeans(iris)
apply(iris[,1:4],2, mean)
v <- iris.sub(x, Species=Virginica)
v <- subset(iris, Species=Virginica)
v
v <- subset(iris, Species=virginica)
v
v <- subset(iris, Species="virginica")
v
rm(v)
v <- iris[iris$Species == virginia, ]
v <- iris[iris$Species == virginica, ]
v <- iris[iris$Species == "virginica", ]
v
colMeans(v)
colMeans(v, 1:4)
apply (v[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars, mtcars$cyl)
lapply(mtcars, mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429 - 82.63636
debug(ls)
ls
ls
ls()
exit
undebug(ls)
library(datasets)
datasets
setwd("~/GitHub/ProgrammingAssignment2")
ls
ls()
myVar <- 1:6
myVar
mean(myVar)
sd(myVar)
reverse(myVar)
library(datasets)
load(iris)
myMatrix <- matrix(1:6, 2, 3)
myMatrix
load(cacheMatrix.R)
load("cacheMatrix.R")
load("cachematrix.R")
source(cachematrix.R)
source("cachematrix.R")
cacheSolve(myMatrix)
x <- makeCacheMatrix(myMatrix)
cacheSolve(x)
myMatrix <- matrix(1:9, 3, 3)
x <- makeCacheMatrix(myMatrix)
cacheSolve(x)
myMatrix <- matrix(c(2,2,3,2), 2, 2)
myMatrix
x <- makeCacheMatrix(myMatrix)
cacheSolve(x)
cacheSolve(x)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
cacheSolve(x)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
